---
- name: 'Prepare containers'
  hosts: all
  gather_facts: false
  pre_tasks:

    #     - name: "Prepare containers : logrotate for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
    #       ansible.builtin.package:
    #         name:
    #           - logrotate
    #         state: present
    #       when: ansible_distribution == 'RedHat'

    - name: 'RAW: add python39 support to el8'
      ansible.builtin.raw: bash -c "grep "el8" /etc/*release && test -e /usr/bin/python || dnf install -y python39"
      failed_when: false

    - name: Setup
      ansible.builtin.setup:

    - name: 'DBus : Gather status'
      become: true
      ansible.builtin.systemd:
        name: dbus
      register: register_dbus_status

    - name: 'DBus : Print status'
      ansible.builtin.debug:
        msg: >
          ActiveState: {{ register_dbus_status.status.ActiveState | default(False) }}
          MainPID: {{ register_dbus_status.status.MainPID | default(False) }}
          UnitState: {{ register_dbus_status.status.UnitFileState | default(False) }}

    - name: Print Distro version
      ansible.builtin.debug:
        msg: 'Distr: {{ ansible_distribution }} {{ ansible_distribution_major_version }}
              / Family: {{ ansible_os_family }}'

    - name: 'Prepare containers : epel repo'
      # for package priority tests
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
        state: present
        disable_gpg_check: true
      failed_when: false
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version | int > 7

    # - name: 'Prepare containers : ca-certificates'
    #   # ubuntu containers lack root CA
    #   ansible.builtin.package:
    #     name:
    #       - ca-certificates
    #     state: present
    #   # when: ansible_distribution == 'Ubuntu'
    #   when: ansible_os_family == 'Debian'

    - name: 'Prepare containers : {{ list_of_additional_soft | select }}'
      ansible.builtin.package:
        name: '{{ list_of_additional_soft | select }}'
        state: present
      vars:
        list_of_additional_soft:
          - '{{ "python3-apt" if ansible_os_family == "Debian" else None }}'
          # - util-linux
          # - vim

    # - name: 'Prepare containers : firewalld'
    #   ansible.builtin.package:
    #     name:
    #       - firewalld
    #     state: present
    #   when: ansible_distribution in ['Ubuntu', 'AlmaLinux', 'Rocky']

    - name: 'Prepare containers : firewalld enable'
      ansible.builtin.systemd:
        name: firewalld
        enabled: true
        state: started
      when: ansible_distribution == 'Ubuntu'
